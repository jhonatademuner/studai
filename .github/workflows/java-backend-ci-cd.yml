name: Java Backend CI/CD

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Run Tests
        run: mvn test

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: java-backend
          path: target/*.jar

  sonarcloud:
    name: Publish to SonarCloud
    runs-on: ubuntu-latest
    needs: CI  # Dependency on the CI job
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis relevancy

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'temurin'

      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .  # Project directory
          args: >
            -Dsonar.organization=kenzokomati
            -Dsonar.projectKey=kenzokomati_studai-java-backend
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.java.libraries=target/dependency
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  CD:
    runs-on: ubuntu-latest
    needs: [CI, sonarcloud]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Download Java Artifact
        uses: actions/download-artifact@v2
        with:
          name: java-backend

      - name: Upload to S3
        run: aws s3 cp *.jar s3://studai-java-backend-deployments/studai.jar
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name studai-java-backend \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket="studai-java-backend-deployments",S3Key="studai.jar"
          aws elasticbeanstalk update-environment \
            --environment-name studai-java-backend-env \
            --version-label ${{ github.sha }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}